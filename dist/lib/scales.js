'use strict';Object.defineProperty(exports,'__esModule',{value:!0});exports.colorScale=exports.getXScale=exports.getDataMaxNumber=exports.xScale=exports.getYScale=exports.yScale=void 0;var _d=require('d3'),d3=_interopRequireWildcard(_d),_d3ScaleChromatic=require('d3-scale-chromatic'),d3chromatic=_interopRequireWildcard(_d3ScaleChromatic),_labels=require('./labels.js'),label=_interopRequireWildcard(_labels);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}// eslintignore https://github.com/d3/d3-scale-chromatic
/**
 * create yscale
 * anywhere you need the Y dimension of the bar to scale to the viewport of the svg
 * first send it into this function e.g. below in the Height and Y properties
 */var yScale=exports.yScale=function(_ref){var a=_ref.chartHeight,b=_ref.chartType,c=_ref.dataMaxNumber,e=_ref.dataMinNumber;if(!b)return appFuncs.logError({data:[a,b,e,c],loc:__filename,msg:'chart type cannot be undefined for scales.yScale(), returning null'}),null;switch(b.toLowerCase()){case'pie':return null;case'line':case'scatterplot':case'bar':default:return 0>a||0>c?(appFuncs.logError({data:[a,b,c,e],loc:__filename,msg:'all values should be defined and above 0 for scales.yScale(), returning null'}),null):d3.scaleLinear().domain(['scatterplot'===b// -1 for scatterplot dots to always be above axis
?e-1:0,'scatterplot'===b// +1 for scatterplot dots to always be below axis
?c+1:c]).range([a,0]);}};/**
 * retrieve xscale
 */var getYScale=exports.getYScale=function(_ref2){var _ref2$chartDataGroupB=_ref2.chartDataGroupBy,b=void 0===_ref2$chartDataGroupB?'':_ref2$chartDataGroupB,_ref2$chartType=_ref2.chartType,c=void 0===_ref2$chartType?'':_ref2$chartType,a=_ref2.data,_ref2$margins=_ref2.margins,e=void 0===_ref2$margins?{}:_ref2$margins,_ref2$svgHeight=_ref2.svgHeight,f=void 0===_ref2$svgHeight?200:_ref2$svgHeight,_ref2$yValue=_ref2.yValue,g=void 0===_ref2$yValue?'':_ref2$yValue;if(!g||!c||appFuncs._.isEmpty(a))return appFuncs.logError({data:[c,a,g],msg:'yValue, chartType and data need to be valid variables for scales.getYScale(), returning null'}),null;var h=void 0,i=void 0,j=[];// flatten if required
switch(b?a.forEach(function(k){var _j;return(_j=j).push.apply(_j,_toConsumableArray(k.values))}):j=a,c.toLowerCase()){case'pie':return null;case'line':// eslintignore both min and max
case'scatterplot':// eslintignore both min and max
try{i=appFuncs._.minBy(j,function(k){return k[g]})[g]}catch(k){appFuncs.logError({data:[j,g],err:k,loc:__filename,msg:'error creating dataMinNumber for '+c+' chart in scales.getYScale()'})}case'bar':// eslint-disable-line no-fallthrough
default:try{h=appFuncs._.maxBy(j,function(k){return k[g]})[g]}catch(k){appFuncs.logError({data:[j,g],err:k,loc:__filename,msg:'error creating dataMaxNumber for '+c+' chart in scales.getYScale()'})}}return yScale({chartHeight:f-(e.top+e.bottom),chartType:c,dataMaxNumber:h,dataMinNumber:i})};/**
 * create xscale
 * anywhere you need the X dimension of the bar to scale to the viewport of the svg
 */var xScale=exports.xScale=function(_ref3){var _ref3$chartType=_ref3.chartType,e=void 0===_ref3$chartType?'':_ref3$chartType,_ref3$chartWidth=_ref3.chartWidth,f=void 0===_ref3$chartWidth?200:_ref3$chartWidth,_ref3$dataLabelsArray=_ref3.dataLabelsArray,g=void 0===_ref3$dataLabelsArray?[]:_ref3$dataLabelsArray,a=_ref3.dataMinNumber,b=_ref3.dataMaxNumber,c=_ref3.xScaleTime;if(!e)return appFuncs.logError({loc:__filename,msg:'chart type ('+e+') needs to be a valid chart type for scales.xScale(), returning null'}),null;if(c)switch(e.toLowerCase()){case'line':return d3.scaleTime().domain([a,b]).range([0,f]);default:return appFuncs.logError({loc:__filename,msg:'chartType '+e+' not setup for xScaleTime in scales.xScale(), returning null'}),null;}switch(e.toLowerCase()){case'pie':return null;case'scatterplot':return d3.scaleLinear().domain([0<a// -1 for scatterplot dots to always be above axis
?a-1:0,// +1 for scatterplot dots to always be below axis
b+1]).range([0,f]);case'bar':return g.length||appFuncs.logError({data:[e,dataLabaelsArray],loc:__filename,msg:'dataLabaelsArray cannot be empty in scales.xScale(), attempting to create and return xScale anyway'}),d3.scaleBand().domain(g).rangeRound([0,f]).paddingInner(0.1).paddingOuter(0.5);default:return appFuncs.logError({loc:__filename,msg:'chartType '+e+' is not setup for scale creation in scales.xScale(), returning null'}),null;}};// get gets max number for getXScale() and getYScale()
// in separate function for VM compiler optimization
var getDataMaxNumber=exports.getDataMaxNumber=function(){};/**
 * retrieve xscale
 */var getXScale=exports.getXScale=function(_ref4){var _ref4$chartDataGroupB=_ref4.chartDataGroupBy,f=void 0===_ref4$chartDataGroupB?'':_ref4$chartDataGroupB,_ref4$chartType=_ref4.chartType,g=void 0===_ref4$chartType?'':_ref4$chartType,a=_ref4.data,b=_ref4.labels,_ref4$margins=_ref4.margins,h=void 0===_ref4$margins?{}:_ref4$margins,_ref4$svgWidth=_ref4.svgWidth,i=void 0===_ref4$svgWidth?200:_ref4$svgWidth,c=_ref4.xValue,e=_ref4.xScaleTime;// eslint-disable-line consistent-return
if(appFuncs._.isEmpty(a))return appFuncs.logError({data:[g,a],loc:__filename,msg:'data must be a valid variable in scales.getXScale(), returning null'}),null;var j=i-(h.left+h.right),k=void 0,l=void 0,m=void 0,n=[];// flatten if required
switch(f?a.forEach(function(p){var _n;return(_n=n).push.apply(_n,_toConsumableArray(p.values))}):n=a,console.dir(['get xscale',a]),g.toLowerCase()){case'pie':return null;case'line':// eslintignore both min and max
case'scatterplot':{// eslintignore both min and max
try{l=appFuncs._.maxBy(n,function(p){return p[c]})[c]}catch(p){appFuncs.logError({data:[n,c,p],loc:__filename,msg:'error creating dataMaxNumber for '+g+' chart in scales.getXScale()'})}try{m=appFuncs._.minBy(n,function(p){return p[c]})[c]}catch(p){appFuncs.logError({data:[n,c,p],loc:__filename,msg:'error creating dataMinNumber for '+g+' chart in scales.getXScale()'})}break}case'bar':// eslint-disable-line
default:k=n.map(function(p){return label.getLabels({chartType:g,d:p,labels:b})});}return xScale({chartType:g,chartWidth:j,dataLabelsArray:k,dataMaxNumber:l,dataMinNumber:m,xScaleTime:e})};// Retrieve color scale
var colorScale=exports.colorScale=function(_ref5){var _ref5$colorScaleSchem=_ref5.colorScaleScheme,a=void 0===_ref5$colorScaleSchem?'schemeCategory20':_ref5$colorScaleSchem,_ref5$colorScaleType=_ref5.colorScaleType,b=void 0===_ref5$colorScaleType?'basic':_ref5$colorScaleType;switch(b.toLowerCase()){// update this:
// https://github.com/d3/d3-scale/blob/master/README.md#category-scales
case'basic':{if(d3[a])return d3.scaleOrdinal(d3[a]);return appFuncs.logError({data:[a,b],loc:__filename,msg:'Scheme '+a+' does not exist for Scale type '+b+', returning default schemeCategory20'}),d3.scaleOrdinal(d3.schemeCategory20)}// update this:
// https://github.com/d3/d3-scale-chromatic#categorical
// https://github.com/d3/d3-scale-chromatic#diverging
case'chromatic':{if(a&&d3chromatic[a])return d3.scaleOrdinal(d3chromatic[a]);return appFuncs.logError({data:[a,b],loc:__filename,msg:'Scheme '+a+' does not exist for Scale type '+b+', returning '+schemeAccent}),d3.scaleOrdinal(d3chromatic.schemeAccent)}// update this
// https://github.com/d3/d3/blob/master/API.md#sequential-scales
case'sequential':return d3.scaleSequential(d3.interpolatePiYG);// update this: https://github.com/d3/d3/blob/master/API.md#sequential-scales
case'random':default:return appFuncs.logError({data:[a,b],loc:__filename,msg:'Scheme '+a+' does not exist for Scale type '+b+', returning '+interpolateCool}),d3.interpolateCool;}};